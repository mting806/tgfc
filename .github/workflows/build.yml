name: Build and Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.17'

    - name: Build Windows binary
      env:
        GOOS: windows
        GOARCH: amd64
      run: |
        echo "Building for Windows x64"
        mkdir -p dist/windows-amd64
        go build -o dist/windows-amd64/xml-tool.exe ./go/xml-tool/main.go

    - name: Build Linux binary
      env:
        GOOS: linux
        GOARCH: amd64
      run: |
        echo "Building for Linux x64"
        mkdir -p dist/linux-amd64
        go build -o dist/linux-amd64/xml-tool ./go/xml-tool/main.go

    - name: Test Linux binary
      run: |
        echo "Testing the Linux binary"
        dist/linux-amd64/xml-tool ./go/xml-tool/orig_xmls/gamelist.xml
        head -n 20 output.xml

    - name: Check for release commit message
      id: check_message
      run: |
        if [[ "${{ github.event.head_commit.message }}" == *"[create-release]"* ]]; then
          echo "Release commit message found."
          echo "::set-output name=create_release::true"
        else
          echo "No release commit message found."
          echo "::set-output name=create_release::false"
        fi

    - name: Create Release
      id: create_release
      if: steps.check_message.outputs.create_release == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      with:
        tag_name: "v${{ github.run_number }}"
        release_name: "XML Tool v${{ github.run_number }}"
        draft: false
        prerelease: false

    - name: Upload Windows Release Asset
      if: steps.check_message.outputs.create_release == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/windows-amd64/xml-tool.exe
        asset_name: xml-tool.exe
        asset_content_type: application/octet-stream

#    - name: Upload Linux Release Asset
#      if: steps.check_message.outputs.create_release == 'true'
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: dist/linux-amd64/xml-tool
#        asset_name: xml-tool
#        asset_content_type: application/octet-stream